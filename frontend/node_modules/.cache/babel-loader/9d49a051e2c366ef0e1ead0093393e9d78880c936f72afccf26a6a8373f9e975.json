{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Harshal\\\\Desktop\\\\showsnap\\\\frontend\\\\src\\\\pages\\\\admin\\\\AddMovie.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport toast from 'react-hot-toast';\nimport { searchMovie, getMovieDetails, getMovieCredits, buildImageUrl } from '../../services/tmdb';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\nfunction AddMovie() {\n  _s();\n  const navigate = useNavigate();\n  const token = localStorage.getItem('token');\n\n  // 🎬 Movie info\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [genre, setGenre] = useState('');\n  const [rating, setRating] = useState('');\n  const [duration, setDuration] = useState('');\n  const [posterUrl, setPosterUrl] = useState('');\n  const [trailerUrl, setTrailerUrl] = useState('');\n  const [releaseDate, setReleaseDate] = useState('');\n  const [language, setLanguage] = useState('');\n\n  // 🎭 Cast\n  const [cast, setCast] = useState([]);\n  const [castName, setCastName] = useState('');\n  const [castRole, setCastRole] = useState('');\n  const [castPhotoUrl, setCastPhotoUrl] = useState('');\n\n  // 🏢 Theaters\n  const [availableTheaters, setAvailableTheaters] = useState([]);\n  const [selectedTheaterIds, setSelectedTheaterIds] = useState([]);\n\n  // 🔍 TMDB Search\n  const [tmdbQuery, setTmdbQuery] = useState('');\n  useEffect(() => {\n    const fetchTheaters = async () => {\n      try {\n        const res = await axios.get(`${API_URL}/api/theaters`);\n        setAvailableTheaters(res.data.theaters);\n      } catch (err) {\n        console.error('❌ Error fetching theaters:', err);\n        toast.error('Failed to load theaters');\n      }\n    };\n    fetchTheaters();\n  }, []);\n  const addCastMember = () => {\n    if (!castName.trim() || !castRole.trim()) {\n      toast.error('Cast name and role are required');\n      return;\n    }\n    if (cast.find(c => c.name.toLowerCase() === castName.toLowerCase())) {\n      toast.error('Cast member already added');\n      return;\n    }\n    setCast(prev => [...prev, {\n      name: castName.trim(),\n      role: castRole.trim(),\n      photoUrl: castPhotoUrl.trim()\n    }]);\n    setCastName('');\n    setCastRole('');\n    setCastPhotoUrl('');\n    toast.success('🎭 Cast added!');\n  };\n  const handleTheaterChange = e => {\n    const selected = Array.from(e.target.selectedOptions, option => option.value);\n    setSelectedTheaterIds(selected);\n  };\n  const handleTmdbSearch = async () => {\n    try {\n      const results = await searchMovie(tmdbQuery);\n      if (!results.length) return toast.error('No results found');\n      const movie = results[0];\n      const details = await getMovieDetails(movie.id);\n      const castList = await getMovieCredits(movie.id);\n      setTitle(details.title);\n      setDescription(details.overview);\n      setGenre(details.genres.map(g => g.name).join(', '));\n      setRating(details.vote_average);\n      setDuration(`${details.runtime} min`);\n      setPosterUrl(buildImageUrl(details.poster_path));\n      setTrailerUrl(`https://www.youtube.com/results?search_query=${details.title}+trailer`);\n      setReleaseDate(details.release_date);\n      setLanguage(details.original_language);\n      const topCast = castList.slice(0, 5).map(c => ({\n        name: c.name,\n        role: c.character,\n        photoUrl: buildImageUrl(c.profile_path)\n      }));\n      setCast(topCast);\n      toast.success(`🎬 Loaded ${details.title} from TMDB`);\n    } catch (err) {\n      console.error('TMDB fetch error:', err);\n      toast.error('Failed to fetch from TMDB');\n    }\n  };\n  const handleSubmit = async () => {\n    if (!title.trim() || !genre.trim() || !posterUrl.trim() || !releaseDate || !language.trim()) {\n      toast.error('Please fill all required movie fields');\n      return;\n    }\n    const newMovie = {\n      title: title.trim(),\n      description: description.trim(),\n      genre: genre.trim(),\n      rating: parseFloat(rating) || 0,\n      duration: duration.trim(),\n      posterUrl: posterUrl.trim(),\n      trailerUrl: trailerUrl.trim(),\n      releaseDate: new Date(releaseDate).toISOString(),\n      language: language.trim(),\n      cast,\n      theaters: availableTheaters.filter(t => selectedTheaterIds.includes(t._id))\n    };\n    try {\n      await axios.post(`${API_URL}/api/admin/movies`, newMovie, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      toast.success('🎉 Movie added successfully!');\n      navigate('/admin');\n    } catch (err) {\n      var _err$response;\n      console.error('❌ Error adding movie:', ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message);\n      toast.error('Failed to add movie');\n    }\n  };\n  const inputClass = 'input bg-gray-800 text-white rounded px-3 py-2 w-full mb-2 focus:outline-none focus:ring-2 focus:ring-red-500';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 max-w-4xl mx-auto bg-gray-900 text-white rounded-lg shadow-lg\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl font-bold mb-6 text-red-500\",\n      children: \"\\uD83C\\uDFAC Add New Movie\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search TMDB...\",\n        value: tmdbQuery,\n        onChange: e => setTmdbQuery(e.target.value),\n        className: inputClass\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleTmdbSearch,\n        className: \"btn bg-blue-600 hover:bg-blue-700 px-4 py-2 rounded text-white mt-2\",\n        children: \"\\uD83D\\uDD0D Fetch from TMDB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"mb-6 grid gap-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Title*\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        className: inputClass\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Description\",\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        className: inputClass\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Genre*\",\n        value: genre,\n        onChange: e => setGenre(e.target.value),\n        className: inputClass\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Rating (0\\u201310)\",\n        value: rating,\n        onChange: e => setRating(e.target.value),\n        className: inputClass\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Duration (e.g. 2h 15m)\",\n        value: duration,\n        onChange: e => setDuration(e.target.value),\n        className: inputClass\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Poster URL*\",\n        value: posterUrl,\n        onChange: e => setPosterUrl(e.target.value),\n        className: inputClass\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Trailer URL\",\n        value: trailerUrl,\n        onChange: e => setTrailerUrl(e.target.value),\n        className: inputClass\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: releaseDate,\n        onChange: e => setReleaseDate(e.target.value),\n        className: inputClass\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Language*\",\n        value: language,\n        onChange: e => setLanguage(e.target.value),\n        className: inputClass\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold mb-2\",\n        children: \"\\uD83C\\uDFAD Cast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-3 gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Name\",\n          value: castName,\n          onChange: e => setCastName(e.target.value),\n          className: inputClass\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Role\",\n          value: castRole,\n          onChange: e => setCastRole(e.target.value),\n          className: inputClass\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Photo URL\",\n          value: castPhotoUrl,\n          onChange: e => setCastPhotoUrl(e.target.value),\n          className: inputClass\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addCastMember,\n        className: \"btn mt-2 mb-4 bg-red-600 hover:bg-red-700 px-4 py-2 rounded\",\n        children: \"Add Cast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), cast.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-disc pl-5 text-sm\",\n        children: cast.map((c, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [c.name, \" as \", c.role, c.photoUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: c.photoUrl,\n            alt: `${c.name}`,\n            className: \"mt-1 w-16 h-16 object-cover rounded-full border border-gray-700\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 19\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold mb-2\",\n        children: \"\\uD83C\\uDFE2 Theaters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-400 mb-2\",\n        children: \"Select existing theaters that will show this movie.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        multiple: true,\n        onChange: handleTheaterChange,\n        className: `${inputClass} h-40`,\n        children: availableTheaters.length > 0 ? availableTheaters.map(theater => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: theater._id,\n          children: [theater.name, \" (\", theater.location, \")\"]\n        }, theater._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"option\", {\n          disabled: true,\n          children: \"No theaters available. Add them via the admin panel first.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), selectedTheaterIds.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm mt-2\",\n        children: [\"Selected: \", selectedTheaterIds.length, \" theater\", selectedTheaterIds.length > 1 ? 's' : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mt-6\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        className: \"btn bg-red-600 hover:bg-red-700 text-white px-6 py-3 rounded font-semibold text-lg transition\",\n        children: \"\\uD83D\\uDE80 Submit Movie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n}\n_s(AddMovie, \"ag8SNQwy8rBmc1Oq1VSc4PimV4I=\", false, function () {\n  return [useNavigate];\n});\n_c = AddMovie;\nexport default AddMovie;\nvar _c;\n$RefreshReg$(_c, \"AddMovie\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","toast","searchMovie","getMovieDetails","getMovieCredits","buildImageUrl","jsxDEV","_jsxDEV","API_URL","process","env","REACT_APP_API_URL","AddMovie","_s","navigate","token","localStorage","getItem","title","setTitle","description","setDescription","genre","setGenre","rating","setRating","duration","setDuration","posterUrl","setPosterUrl","trailerUrl","setTrailerUrl","releaseDate","setReleaseDate","language","setLanguage","cast","setCast","castName","setCastName","castRole","setCastRole","castPhotoUrl","setCastPhotoUrl","availableTheaters","setAvailableTheaters","selectedTheaterIds","setSelectedTheaterIds","tmdbQuery","setTmdbQuery","fetchTheaters","res","get","data","theaters","err","console","error","addCastMember","trim","find","c","name","toLowerCase","prev","role","photoUrl","success","handleTheaterChange","e","selected","Array","from","target","selectedOptions","option","value","handleTmdbSearch","results","length","movie","details","id","castList","overview","genres","map","g","join","vote_average","runtime","poster_path","release_date","original_language","topCast","slice","character","profile_path","handleSubmit","newMovie","parseFloat","Date","toISOString","filter","t","includes","_id","post","headers","Authorization","_err$response","response","message","inputClass","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","i","src","alt","multiple","theater","location","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Harshal/Desktop/showsnap/frontend/src/pages/admin/AddMovie.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport toast from 'react-hot-toast';\r\nimport {\r\n  searchMovie,\r\n  getMovieDetails,\r\n  getMovieCredits,\r\n  buildImageUrl\r\n} from '../../services/tmdb';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\r\n\r\nfunction AddMovie() {\r\n  const navigate = useNavigate();\r\n  const token = localStorage.getItem('token');\r\n\r\n  // 🎬 Movie info\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [genre, setGenre] = useState('');\r\n  const [rating, setRating] = useState('');\r\n  const [duration, setDuration] = useState('');\r\n  const [posterUrl, setPosterUrl] = useState('');\r\n  const [trailerUrl, setTrailerUrl] = useState('');\r\n  const [releaseDate, setReleaseDate] = useState('');\r\n  const [language, setLanguage] = useState('');\r\n\r\n  // 🎭 Cast\r\n  const [cast, setCast] = useState([]);\r\n  const [castName, setCastName] = useState('');\r\n  const [castRole, setCastRole] = useState('');\r\n  const [castPhotoUrl, setCastPhotoUrl] = useState('');\r\n\r\n  // 🏢 Theaters\r\n  const [availableTheaters, setAvailableTheaters] = useState([]);\r\n  const [selectedTheaterIds, setSelectedTheaterIds] = useState([]);\r\n\r\n  // 🔍 TMDB Search\r\n  const [tmdbQuery, setTmdbQuery] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchTheaters = async () => {\r\n      try {\r\n        const res = await axios.get(`${API_URL}/api/theaters`);\r\n        setAvailableTheaters(res.data.theaters);\r\n      } catch (err) {\r\n        console.error('❌ Error fetching theaters:', err);\r\n        toast.error('Failed to load theaters');\r\n      }\r\n    };\r\n    fetchTheaters();\r\n  }, []);\r\n\r\n  const addCastMember = () => {\r\n    if (!castName.trim() || !castRole.trim()) {\r\n      toast.error('Cast name and role are required');\r\n      return;\r\n    }\r\n    if (cast.find(c => c.name.toLowerCase() === castName.toLowerCase())) {\r\n      toast.error('Cast member already added');\r\n      return;\r\n    }\r\n    setCast(prev => [...prev, { name: castName.trim(), role: castRole.trim(), photoUrl: castPhotoUrl.trim() }]);\r\n    setCastName('');\r\n    setCastRole('');\r\n    setCastPhotoUrl('');\r\n    toast.success('🎭 Cast added!');\r\n  };\r\n\r\n  const handleTheaterChange = (e) => {\r\n    const selected = Array.from(e.target.selectedOptions, option => option.value);\r\n    setSelectedTheaterIds(selected);\r\n  };\r\n\r\n  const handleTmdbSearch = async () => {\r\n    try {\r\n      const results = await searchMovie(tmdbQuery);\r\n      if (!results.length) return toast.error('No results found');\r\n\r\n      const movie = results[0];\r\n      const details = await getMovieDetails(movie.id);\r\n      const castList = await getMovieCredits(movie.id);\r\n\r\n      setTitle(details.title);\r\n      setDescription(details.overview);\r\n      setGenre(details.genres.map(g => g.name).join(', '));\r\n      setRating(details.vote_average);\r\n      setDuration(`${details.runtime} min`);\r\n      setPosterUrl(buildImageUrl(details.poster_path));\r\n      setTrailerUrl(`https://www.youtube.com/results?search_query=${details.title}+trailer`);\r\n      setReleaseDate(details.release_date);\r\n      setLanguage(details.original_language);\r\n\r\n      const topCast = castList.slice(0, 5).map(c => ({\r\n        name: c.name,\r\n        role: c.character,\r\n        photoUrl: buildImageUrl(c.profile_path)\r\n      }));\r\n      setCast(topCast);\r\n\r\n      toast.success(`🎬 Loaded ${details.title} from TMDB`);\r\n    } catch (err) {\r\n      console.error('TMDB fetch error:', err);\r\n      toast.error('Failed to fetch from TMDB');\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (!title.trim() || !genre.trim() || !posterUrl.trim() || !releaseDate || !language.trim()) {\r\n      toast.error('Please fill all required movie fields');\r\n      return;\r\n    }\r\n\r\n    const newMovie = {\r\n      title: title.trim(),\r\n      description: description.trim(),\r\n      genre: genre.trim(),\r\n      rating: parseFloat(rating) || 0,\r\n      duration: duration.trim(),\r\n      posterUrl: posterUrl.trim(),\r\n      trailerUrl: trailerUrl.trim(),\r\n      releaseDate: new Date(releaseDate).toISOString(),\r\n      language: language.trim(),\r\n      cast,\r\n      theaters: availableTheaters.filter(t => selectedTheaterIds.includes(t._id))\r\n    };\r\n\r\n    try {\r\n      await axios.post(`${API_URL}/api/admin/movies`, newMovie, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      toast.success('🎉 Movie added successfully!');\r\n      navigate('/admin');\r\n    } catch (err) {\r\n      console.error('❌ Error adding movie:', err.response?.data || err.message);\r\n      toast.error('Failed to add movie');\r\n    }\r\n  };\r\n\r\n  const inputClass = 'input bg-gray-800 text-white rounded px-3 py-2 w-full mb-2 focus:outline-none focus:ring-2 focus:ring-red-500';\r\n\r\n  return (\r\n    <div className=\"p-6 max-w-4xl mx-auto bg-gray-900 text-white rounded-lg shadow-lg\">\r\n      <h2 className=\"text-3xl font-bold mb-6 text-red-500\">🎬 Add New Movie</h2>\r\n\r\n      {/* TMDB Search */}\r\n      <section className=\"mb-6\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search TMDB...\"\r\n          value={tmdbQuery}\r\n          onChange={e => setTmdbQuery(e.target.value)}\r\n          className={inputClass}\r\n        />\r\n        <button\r\n          onClick={handleTmdbSearch}\r\n          className=\"btn bg-blue-600 hover:bg-blue-700 px-4 py-2 rounded text-white mt-2\"\r\n        >\r\n          🔍 Fetch from TMDB\r\n        </button>\r\n      </section>\r\n\r\n      {/* Movie Info */}\r\n      <section className=\"mb-6 grid gap-2\">\r\n        <input type=\"text\" placeholder=\"Title*\" value={title} onChange={e => setTitle(e.target.value)} className={inputClass} />\r\n        <textarea placeholder=\"Description\" value={description} onChange={e => setDescription(e.target.value)} className={inputClass} />\r\n        <input type=\"text\" placeholder=\"Genre*\" value={genre} onChange={e => setGenre(e.target.value)} className={inputClass} />\r\n        <input type=\"number\" placeholder=\"Rating (0–10)\" value={rating} onChange={e => setRating(e.target.value)} className={inputClass} />\r\n        <input type=\"text\" placeholder=\"Duration (e.g. 2h 15m)\" value={duration} onChange={e => setDuration(e.target.value)} className={inputClass} />\r\n        <input type=\"text\" placeholder=\"Poster URL*\" value={posterUrl} onChange={e => setPosterUrl(e.target.value)} className={inputClass} />\r\n        <input type=\"text\" placeholder=\"Trailer URL\" value={trailerUrl} onChange={e => setTrailerUrl(e.target.value)} className={inputClass} />\r\n        <input type=\"date\" value={releaseDate} onChange={e => setReleaseDate(e.target.value)} className={inputClass} />\r\n        <input type=\"text\" placeholder=\"Language*\" value={language} onChange={e => setLanguage(e.target.value)} className={inputClass} />\r\n      </section>\r\n\r\n      {/* Cast */}\r\n      <section className=\"mb-6\">\r\n        <h3 className=\"text-lg font-semibold mb-2\">🎭 Cast</h3>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-2\">\r\n          <input type=\"text\" placeholder=\"Name\" value={castName} onChange={e => setCastName(e.target.value)} className={inputClass} />\r\n          <input type=\"text\" placeholder=\"Role\" value={castRole} onChange={e => setCastRole(e.target.value)} className={inputClass} />\r\n          <input type=\"text\" placeholder=\"Photo URL\" value={castPhotoUrl} onChange={e => setCastPhotoUrl(e.target.value)} className={inputClass} />\r\n        </div>\r\n        <button onClick={addCastMember} className=\"btn mt-2 mb-4 bg-red-600 hover:bg-red-700 px-4 py-2 rounded\">Add Cast</button>\r\n        {cast.length > 0 && (\r\n          <ul className=\"list-disc pl-5 text-sm\">\r\n            {cast.map((c, i) => (\r\n              <li key={i}>\r\n                {c.name} as {c.role}\r\n                {c.photoUrl && (\r\n                  <img\r\n                    src={c.photoUrl}\r\n                    alt={`${c.name}`}\r\n                    className=\"mt-1 w-16 h-16 object-cover rounded-full border border-gray-700\"\r\n                  />\r\n                )}\r\n                            </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </section>\r\n\r\n      {/* Theaters */}\r\n      <section className=\"mb-6\">\r\n        <h3 className=\"text-lg font-semibold mb-2\">🏢 Theaters</h3>\r\n        <p className=\"text-sm text-gray-400 mb-2\">Select existing theaters that will show this movie.</p>\r\n        <select\r\n          multiple\r\n          onChange={handleTheaterChange}\r\n          className={`${inputClass} h-40`}\r\n        >\r\n          {availableTheaters.length > 0 ? (\r\n            availableTheaters.map(theater => (\r\n              <option key={theater._id} value={theater._id}>\r\n                {theater.name} ({theater.location})\r\n              </option>\r\n            ))\r\n          ) : (\r\n            <option disabled>No theaters available. Add them via the admin panel first.</option>\r\n          )}\r\n        </select>\r\n        {selectedTheaterIds.length > 0 && (\r\n          <p className=\"text-sm mt-2\">\r\n            Selected: {selectedTheaterIds.length} theater{selectedTheaterIds.length > 1 ? 's' : ''}\r\n          </p>\r\n        )}\r\n      </section>\r\n\r\n      {/* Submit */}\r\n      <div className=\"text-center mt-6\">\r\n        <button\r\n          onClick={handleSubmit}\r\n          className=\"btn bg-red-600 hover:bg-red-700 text-white px-6 py-3 rounded font-semibold text-lg transition\"\r\n        >\r\n          🚀 Submit Movie\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddMovie;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}