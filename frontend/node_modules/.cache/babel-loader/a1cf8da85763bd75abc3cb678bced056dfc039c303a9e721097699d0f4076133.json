{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\n// You might need a new API function, e.g., getUserBookingsApi\nimport { getAllUserBookings } from '../services/api';\nimport toast from 'react-hot-toast';\nfunction BookingHistory() {\n  _s();\n  const [bookings, setBookings] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      setError('You must be logged in to view bookings.');\n      setLoading(false);\n      return;\n    }\n\n    // ✅ Correct API call to fetch only the user's bookings\n    // The backend's 'protect' middleware handles the user identification\n    getAllUserBookings().then(res => {\n      // The backend should return the correct data, so no filtering is needed here\n      setBookings(res.data.bookings || []);\n      setLoading(false);\n    }).catch(err => {\n      console.error('Error fetching bookings:', err.message);\n      toast.error('Failed to load bookings');\n      setError('Failed to load bookings.');\n      setLoading(false);\n    });\n  }, []); // Depend on nothing as user token is in localStorage\n\n  // ... rest of the component remains correct\n  // (loading, error, and booking display logic)\n}\n_s(BookingHistory, \"BT4NxVaa8/YLJJTdHhhC9vujNog=\");\n_c = BookingHistory;\nexport default BookingHistory;\nvar _c;\n$RefreshReg$(_c, \"BookingHistory\");","map":{"version":3,"names":["React","useEffect","useState","getAllUserBookings","toast","BookingHistory","_s","bookings","setBookings","loading","setLoading","error","setError","token","localStorage","getItem","then","res","data","catch","err","console","message","_c","$RefreshReg$"],"sources":["C:/Users/Harshal/Desktop/showsnap/frontend/src/pages/BookingHistory.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n// You might need a new API function, e.g., getUserBookingsApi\r\nimport { getAllUserBookings } from '../services/api';\r\nimport toast from 'react-hot-toast';\r\n\r\nfunction BookingHistory() {\r\n  const [bookings, setBookings] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n\r\n    if (!token) {\r\n      setError('You must be logged in to view bookings.');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    // ✅ Correct API call to fetch only the user's bookings\r\n    // The backend's 'protect' middleware handles the user identification\r\n    getAllUserBookings()\r\n      .then(res => {\r\n        // The backend should return the correct data, so no filtering is needed here\r\n        setBookings(res.data.bookings || []);\r\n        setLoading(false);\r\n      })\r\n      .catch(err => {\r\n        console.error('Error fetching bookings:', err.message);\r\n        toast.error('Failed to load bookings');\r\n        setError('Failed to load bookings.');\r\n        setLoading(false);\r\n      });\r\n  }, []); // Depend on nothing as user token is in localStorage\r\n\r\n  // ... rest of the component remains correct\r\n  // (loading, error, and booking display logic)\r\n}\r\n\r\nexport default BookingHistory;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD;AACA,SAASC,kBAAkB,QAAQ,iBAAiB;AACpD,OAAOC,KAAK,MAAM,iBAAiB;AAEnC,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd,MAAMY,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAE3C,IAAI,CAACF,KAAK,EAAE;MACVD,QAAQ,CAAC,yCAAyC,CAAC;MACnDF,UAAU,CAAC,KAAK,CAAC;MACjB;IACF;;IAEA;IACA;IACAP,kBAAkB,CAAC,CAAC,CACjBa,IAAI,CAACC,GAAG,IAAI;MACX;MACAT,WAAW,CAACS,GAAG,CAACC,IAAI,CAACX,QAAQ,IAAI,EAAE,CAAC;MACpCG,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,CACDS,KAAK,CAACC,GAAG,IAAI;MACZC,OAAO,CAACV,KAAK,CAAC,0BAA0B,EAAES,GAAG,CAACE,OAAO,CAAC;MACtDlB,KAAK,CAACO,KAAK,CAAC,yBAAyB,CAAC;MACtCC,QAAQ,CAAC,0BAA0B,CAAC;MACpCF,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;EACA;AACF;AAACJ,EAAA,CAhCQD,cAAc;AAAAkB,EAAA,GAAdlB,cAAc;AAkCvB,eAAeA,cAAc;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}