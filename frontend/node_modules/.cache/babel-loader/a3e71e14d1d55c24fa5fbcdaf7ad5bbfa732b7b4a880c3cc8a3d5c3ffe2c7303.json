{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Harshal\\\\Desktop\\\\showsnap\\\\frontend\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useMemo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\n\n// ✅ Utility: Decode JWT safely\nconst decodePayload = jwtToken => {\n  try {\n    const base64Url = jwtToken.split('.')[1];\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    return JSON.parse(atob(base64));\n  } catch (err) {\n    console.error('❌ Failed to decode JWT:', err);\n    return null;\n  }\n};\n\n// ✅ Utility: Check expiry\nconst isTokenExpired = jwtToken => {\n  const payload = decodePayload(jwtToken);\n  if (!(payload !== null && payload !== void 0 && payload.exp)) return true;\n  return payload.exp * 1000 < Date.now();\n};\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  // ⚡ Initialize directly from localStorage\n  const storedToken = localStorage.getItem('token');\n  const storedUser = localStorage.getItem('user');\n  const storedRole = localStorage.getItem('role');\n  const initialUser = storedUser ? (() => {\n    try {\n      return JSON.parse(storedUser);\n    } catch {\n      return null;\n    }\n  })() : null;\n  const [user, setUser] = useState(initialUser);\n  const [token, setToken] = useState(storedToken || null);\n  const [role, setRole] = useState(storedRole || (initialUser === null || initialUser === void 0 ? void 0 : initialUser.role) || 'user');\n  const [isAuthenticated, setIsAuthenticated] = useState(!!storedToken && !!initialUser && !isTokenExpired(storedToken));\n\n  // 🧹 Clear auth state\n  const clearAuthState = () => {\n    setUser(null);\n    setIsAuthenticated(false);\n    setRole('user');\n    setToken(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    localStorage.removeItem('role');\n  };\n\n  // 🔑 Login handler\n  const login = (userData, jwtToken) => {\n    if (!userData || !jwtToken) return;\n    localStorage.setItem('token', jwtToken);\n    localStorage.setItem('user', JSON.stringify(userData));\n    localStorage.setItem('role', (userData.role || 'user').toLowerCase());\n    setUser(userData);\n    setIsAuthenticated(true);\n    setRole((userData.role || 'user').toLowerCase());\n    setToken(jwtToken);\n  };\n\n  // 🔄 Validate stored token on mount\n  useEffect(() => {\n    if (storedToken && storedUser) {\n      if (isTokenExpired(storedToken)) {\n        console.warn('⚠️ Token expired. Clearing auth state.');\n        clearAuthState();\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // ⏱️ Auto-logout on token expiry\n  useEffect(() => {\n    if (!token) return;\n    const payload = decodePayload(token);\n    if (!(payload !== null && payload !== void 0 && payload.exp)) return;\n    const expiryTime = payload.exp * 1000 - Date.now();\n    if (expiryTime <= 0) {\n      clearAuthState();\n      return;\n    }\n    const timeout = setTimeout(() => {\n      console.warn('⚠️ Token expired. Logging out.');\n      clearAuthState();\n    }, expiryTime);\n    return () => clearTimeout(timeout);\n  }, [token]);\n\n  // 🔧 Memoized context value for performance\n  const contextValue = useMemo(() => ({\n    user,\n    setUser,\n    isAuthenticated,\n    setIsAuthenticated,\n    role,\n    setRole,\n    token,\n    login,\n    clearAuthState\n  }), [user, isAuthenticated, role, token]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"OhSyGTXedcmQywKLdjOScqbqcqo=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useMemo","jsxDEV","_jsxDEV","AuthContext","decodePayload","jwtToken","base64Url","split","base64","replace","JSON","parse","atob","err","console","error","isTokenExpired","payload","exp","Date","now","AuthProvider","children","_s","storedToken","localStorage","getItem","storedUser","storedRole","initialUser","user","setUser","token","setToken","role","setRole","isAuthenticated","setIsAuthenticated","clearAuthState","removeItem","login","userData","setItem","stringify","toLowerCase","warn","expiryTime","timeout","setTimeout","clearTimeout","contextValue","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Harshal/Desktop/showsnap/frontend/src/context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect, useMemo } from 'react';\r\n\r\nexport const AuthContext = createContext();\r\n\r\n// ✅ Utility: Decode JWT safely\r\nconst decodePayload = (jwtToken) => {\r\n  try {\r\n    const base64Url = jwtToken.split('.')[1];\r\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n    return JSON.parse(atob(base64));\r\n  } catch (err) {\r\n    console.error('❌ Failed to decode JWT:', err);\r\n    return null;\r\n  }\r\n};\r\n\r\n// ✅ Utility: Check expiry\r\nconst isTokenExpired = (jwtToken) => {\r\n  const payload = decodePayload(jwtToken);\r\n  if (!payload?.exp) return true;\r\n  return payload.exp * 1000 < Date.now();\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  // ⚡ Initialize directly from localStorage\r\n  const storedToken = localStorage.getItem('token');\r\n  const storedUser = localStorage.getItem('user');\r\n  const storedRole = localStorage.getItem('role');\r\n\r\n  const initialUser = storedUser ? (() => {\r\n    try {\r\n      return JSON.parse(storedUser);\r\n    } catch {\r\n      return null;\r\n    }\r\n  })() : null;\r\n\r\n  const [user, setUser] = useState(initialUser);\r\n  const [token, setToken] = useState(storedToken || null);\r\n  const [role, setRole] = useState(storedRole || (initialUser?.role || 'user'));\r\n  const [isAuthenticated, setIsAuthenticated] = useState(\r\n    !!storedToken && !!initialUser && !isTokenExpired(storedToken)\r\n  );\r\n\r\n  // 🧹 Clear auth state\r\n  const clearAuthState = () => {\r\n    setUser(null);\r\n    setIsAuthenticated(false);\r\n    setRole('user');\r\n    setToken(null);\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    localStorage.removeItem('role');\r\n  };\r\n\r\n  // 🔑 Login handler\r\n  const login = (userData, jwtToken) => {\r\n    if (!userData || !jwtToken) return;\r\n\r\n    localStorage.setItem('token', jwtToken);\r\n    localStorage.setItem('user', JSON.stringify(userData));\r\n    localStorage.setItem('role', (userData.role || 'user').toLowerCase());\r\n\r\n    setUser(userData);\r\n    setIsAuthenticated(true);\r\n    setRole((userData.role || 'user').toLowerCase());\r\n    setToken(jwtToken);\r\n  };\r\n\r\n  // 🔄 Validate stored token on mount\r\n  useEffect(() => {\r\n    if (storedToken && storedUser) {\r\n      if (isTokenExpired(storedToken)) {\r\n        console.warn('⚠️ Token expired. Clearing auth state.');\r\n        clearAuthState();\r\n      }\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  // ⏱️ Auto-logout on token expiry\r\n  useEffect(() => {\r\n    if (!token) return;\r\n\r\n    const payload = decodePayload(token);\r\n    if (!payload?.exp) return;\r\n\r\n    const expiryTime = payload.exp * 1000 - Date.now();\r\n    if (expiryTime <= 0) {\r\n      clearAuthState();\r\n      return;\r\n    }\r\n\r\n    const timeout = setTimeout(() => {\r\n      console.warn('⚠️ Token expired. Logging out.');\r\n      clearAuthState();\r\n    }, expiryTime);\r\n\r\n    return () => clearTimeout(timeout);\r\n  }, [token]);\r\n\r\n  // 🔧 Memoized context value for performance\r\n  const contextValue = useMemo(() => ({\r\n    user,\r\n    setUser,\r\n    isAuthenticated,\r\n    setIsAuthenticated,\r\n    role,\r\n    setRole,\r\n    token,\r\n    login,\r\n    clearAuthState\r\n  }), [user, isAuthenticated, role, token]);\r\n\r\n  return (\r\n    <AuthContext.Provider value={contextValue}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}