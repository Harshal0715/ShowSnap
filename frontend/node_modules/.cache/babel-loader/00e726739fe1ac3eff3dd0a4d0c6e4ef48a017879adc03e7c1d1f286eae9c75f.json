{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Harshal\\\\Desktop\\\\showsnap\\\\frontend\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [role, setRole] = useState('user');\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const storedUser = localStorage.getItem('user');\n    const storedRole = localStorage.getItem('role');\n    if (token && storedUser) {\n      try {\n        const parsedUser = JSON.parse(storedUser);\n        setUser(parsedUser);\n        setIsAuthenticated(true);\n        setRole(storedRole || parsedUser.role || 'user');\n      } catch (error) {\n        console.error('❌ Error parsing user from localStorage:', error.message);\n        clearAuthState();\n      }\n    } else {\n      clearAuthState();\n    }\n  }, []);\n  const clearAuthState = () => {\n    setUser(null);\n    setIsAuthenticated(false);\n    setRole('user');\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    localStorage.removeItem('role');\n  };\n  const login = (userData, token) => {\n    localStorage.setItem('token', token);\n    localStorage.setItem('user', JSON.stringify(userData));\n    localStorage.setItem('role', userData.role || 'user');\n    setUser(userData);\n    setIsAuthenticated(true);\n    setRole(userData.role || 'user');\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      setUser,\n      isAuthenticated,\n      setIsAuthenticated,\n      role,\n      setRole,\n      clearAuthState,\n      login\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"8e+akPYaf/Q0YyywzQ7syxdr6X0=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","isAuthenticated","setIsAuthenticated","role","setRole","token","localStorage","getItem","storedUser","storedRole","parsedUser","JSON","parse","error","console","message","clearAuthState","removeItem","login","userData","setItem","stringify","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Harshal/Desktop/showsnap/frontend/src/context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [role, setRole] = useState('user');\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    const storedUser = localStorage.getItem('user');\r\n    const storedRole = localStorage.getItem('role');\r\n\r\n    if (token && storedUser) {\r\n      try {\r\n        const parsedUser = JSON.parse(storedUser);\r\n        setUser(parsedUser);\r\n        setIsAuthenticated(true);\r\n        setRole(storedRole || parsedUser.role || 'user');\r\n      } catch (error) {\r\n        console.error('❌ Error parsing user from localStorage:', error.message);\r\n        clearAuthState();\r\n      }\r\n    } else {\r\n      clearAuthState();\r\n    }\r\n  }, []);\r\n\r\n  const clearAuthState = () => {\r\n    setUser(null);\r\n    setIsAuthenticated(false);\r\n    setRole('user');\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    localStorage.removeItem('role');\r\n  };\r\n\r\n  const login = (userData, token) => {\r\n    localStorage.setItem('token', token);\r\n    localStorage.setItem('user', JSON.stringify(userData));\r\n    localStorage.setItem('role', userData.role || 'user');\r\n    setUser(userData);\r\n    setIsAuthenticated(true);\r\n    setRole(userData.role || 'user');\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user,\r\n        setUser,\r\n        isAuthenticated,\r\n        setIsAuthenticated,\r\n        role,\r\n        setRole,\r\n        clearAuthState,\r\n        login\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACU,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,MAAM,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMa,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,UAAU,GAAGF,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC/C,MAAME,UAAU,GAAGH,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAE/C,IAAIF,KAAK,IAAIG,UAAU,EAAE;MACvB,IAAI;QACF,MAAME,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC;QACzCR,OAAO,CAACU,UAAU,CAAC;QACnBR,kBAAkB,CAAC,IAAI,CAAC;QACxBE,OAAO,CAACK,UAAU,IAAIC,UAAU,CAACP,IAAI,IAAI,MAAM,CAAC;MAClD,CAAC,CAAC,OAAOU,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAACE,OAAO,CAAC;QACvEC,cAAc,CAAC,CAAC;MAClB;IACF,CAAC,MAAM;MACLA,cAAc,CAAC,CAAC;IAClB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,cAAc,GAAGA,CAAA,KAAM;IAC3BhB,OAAO,CAAC,IAAI,CAAC;IACbE,kBAAkB,CAAC,KAAK,CAAC;IACzBE,OAAO,CAAC,MAAM,CAAC;IACfE,YAAY,CAACW,UAAU,CAAC,OAAO,CAAC;IAChCX,YAAY,CAACW,UAAU,CAAC,MAAM,CAAC;IAC/BX,YAAY,CAACW,UAAU,CAAC,MAAM,CAAC;EACjC,CAAC;EAED,MAAMC,KAAK,GAAGA,CAACC,QAAQ,EAAEd,KAAK,KAAK;IACjCC,YAAY,CAACc,OAAO,CAAC,OAAO,EAAEf,KAAK,CAAC;IACpCC,YAAY,CAACc,OAAO,CAAC,MAAM,EAAET,IAAI,CAACU,SAAS,CAACF,QAAQ,CAAC,CAAC;IACtDb,YAAY,CAACc,OAAO,CAAC,MAAM,EAAED,QAAQ,CAAChB,IAAI,IAAI,MAAM,CAAC;IACrDH,OAAO,CAACmB,QAAQ,CAAC;IACjBjB,kBAAkB,CAAC,IAAI,CAAC;IACxBE,OAAO,CAACe,QAAQ,CAAChB,IAAI,IAAI,MAAM,CAAC;EAClC,CAAC;EAED,oBACET,OAAA,CAACC,WAAW,CAAC2B,QAAQ;IACnBC,KAAK,EAAE;MACLxB,IAAI;MACJC,OAAO;MACPC,eAAe;MACfC,kBAAkB;MAClBC,IAAI;MACJC,OAAO;MACPY,cAAc;MACdE;IACF,CAAE;IAAArB,QAAA,EAEDA;EAAQ;IAAA2B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC7B,EAAA,CA3DWF,YAAY;AAAAgC,EAAA,GAAZhC,YAAY;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}