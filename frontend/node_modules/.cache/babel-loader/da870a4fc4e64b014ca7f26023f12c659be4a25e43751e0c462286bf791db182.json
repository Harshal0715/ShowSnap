{"ast":null,"code":"const handleSubmit = async e => {\n  e.preventDefault();\n\n  // Access user and token from context\n  if (!user || !user._id) {\n    toast.error('User not found');\n    return;\n  }\n  try {\n    var _profile$name, _profile$email, _profile$mobile, _profile$password;\n    // Prepare form data for multipart upload\n    const formData = new FormData();\n    if ((_profile$name = profile.name) !== null && _profile$name !== void 0 && _profile$name.trim()) formData.append('name', profile.name.trim());\n    if ((_profile$email = profile.email) !== null && _profile$email !== void 0 && _profile$email.trim()) formData.append('email', profile.email.trim());\n    if ((_profile$mobile = profile.mobile) !== null && _profile$mobile !== void 0 && _profile$mobile.trim()) formData.append('mobile', profile.mobile.trim());\n    if ((_profile$password = profile.password) !== null && _profile$password !== void 0 && _profile$password.trim()) formData.append('password', profile.password.trim());\n    if (photoFile) formData.append('photo', photoFile);\n\n    // Call API to update profile\n    await updateUserProfile(formData, token);\n\n    // Reset password field and show success\n    setProfile(prev => ({\n      ...prev,\n      password: ''\n    }));\n    toast.success('Profile updated successfully');\n  } catch (err) {\n    var _err$response, _err$response2, _err$response2$data;\n    console.error('Profile update error:', ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message);\n    toast.error(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || 'Failed to update profile');\n  }\n};","map":{"version":3,"names":["handleSubmit","e","preventDefault","user","_id","toast","error","_profile$name","_profile$email","_profile$mobile","_profile$password","formData","FormData","profile","name","trim","append","email","mobile","password","photoFile","updateUserProfile","token","setProfile","prev","success","err","_err$response","_err$response2","_err$response2$data","console","response","data","message"],"sources":["C:/Users/Harshal/Desktop/showsnap/frontend/src/pages/EditProfile.jsx"],"sourcesContent":["const handleSubmit = async (e) => {\r\n  e.preventDefault();\r\n\r\n  // Access user and token from context\r\n  if (!user || !user._id) {\r\n    toast.error('User not found');\r\n    return;\r\n  }\r\n\r\n  try {\r\n    // Prepare form data for multipart upload\r\n    const formData = new FormData();\r\n    if (profile.name?.trim()) formData.append('name', profile.name.trim());\r\n    if (profile.email?.trim()) formData.append('email', profile.email.trim());\r\n    if (profile.mobile?.trim()) formData.append('mobile', profile.mobile.trim());\r\n    if (profile.password?.trim()) formData.append('password', profile.password.trim());\r\n    if (photoFile) formData.append('photo', photoFile);\r\n\r\n    // Call API to update profile\r\n    await updateUserProfile(formData, token);\r\n\r\n    // Reset password field and show success\r\n    setProfile(prev => ({ ...prev, password: '' }));\r\n    toast.success('Profile updated successfully');\r\n  } catch (err) {\r\n    console.error('Profile update error:', err.response?.data || err.message);\r\n    toast.error(err.response?.data?.error || 'Failed to update profile');\r\n  }\r\n};\r\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,MAAOC,CAAC,IAAK;EAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;;EAElB;EACA,IAAI,CAACC,IAAI,IAAI,CAACA,IAAI,CAACC,GAAG,EAAE;IACtBC,KAAK,CAACC,KAAK,CAAC,gBAAgB,CAAC;IAC7B;EACF;EAEA,IAAI;IAAA,IAAAC,aAAA,EAAAC,cAAA,EAAAC,eAAA,EAAAC,iBAAA;IACF;IACA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/B,KAAAL,aAAA,GAAIM,OAAO,CAACC,IAAI,cAAAP,aAAA,eAAZA,aAAA,CAAcQ,IAAI,CAAC,CAAC,EAAEJ,QAAQ,CAACK,MAAM,CAAC,MAAM,EAAEH,OAAO,CAACC,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC;IACtE,KAAAP,cAAA,GAAIK,OAAO,CAACI,KAAK,cAAAT,cAAA,eAAbA,cAAA,CAAeO,IAAI,CAAC,CAAC,EAAEJ,QAAQ,CAACK,MAAM,CAAC,OAAO,EAAEH,OAAO,CAACI,KAAK,CAACF,IAAI,CAAC,CAAC,CAAC;IACzE,KAAAN,eAAA,GAAII,OAAO,CAACK,MAAM,cAAAT,eAAA,eAAdA,eAAA,CAAgBM,IAAI,CAAC,CAAC,EAAEJ,QAAQ,CAACK,MAAM,CAAC,QAAQ,EAAEH,OAAO,CAACK,MAAM,CAACH,IAAI,CAAC,CAAC,CAAC;IAC5E,KAAAL,iBAAA,GAAIG,OAAO,CAACM,QAAQ,cAAAT,iBAAA,eAAhBA,iBAAA,CAAkBK,IAAI,CAAC,CAAC,EAAEJ,QAAQ,CAACK,MAAM,CAAC,UAAU,EAAEH,OAAO,CAACM,QAAQ,CAACJ,IAAI,CAAC,CAAC,CAAC;IAClF,IAAIK,SAAS,EAAET,QAAQ,CAACK,MAAM,CAAC,OAAO,EAAEI,SAAS,CAAC;;IAElD;IACA,MAAMC,iBAAiB,CAACV,QAAQ,EAAEW,KAAK,CAAC;;IAExC;IACAC,UAAU,CAACC,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAEL,QAAQ,EAAE;IAAG,CAAC,CAAC,CAAC;IAC/Cd,KAAK,CAACoB,OAAO,CAAC,8BAA8B,CAAC;EAC/C,CAAC,CAAC,OAAOC,GAAG,EAAE;IAAA,IAAAC,aAAA,EAAAC,cAAA,EAAAC,mBAAA;IACZC,OAAO,CAACxB,KAAK,CAAC,uBAAuB,EAAE,EAAAqB,aAAA,GAAAD,GAAG,CAACK,QAAQ,cAAAJ,aAAA,uBAAZA,aAAA,CAAcK,IAAI,KAAIN,GAAG,CAACO,OAAO,CAAC;IACzE5B,KAAK,CAACC,KAAK,CAAC,EAAAsB,cAAA,GAAAF,GAAG,CAACK,QAAQ,cAAAH,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAcI,IAAI,cAAAH,mBAAA,uBAAlBA,mBAAA,CAAoBvB,KAAK,KAAI,0BAA0B,CAAC;EACtE;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}