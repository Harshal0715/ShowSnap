{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Harshal\\\\Desktop\\\\showsnap\\\\frontend\\\\src\\\\pages\\\\TheatersPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TheatersPage() {\n  _s();\n  const [theaters, setTheaters] = useState([]);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchTheaters = async () => {\n      try {\n        const res = await fetch('http://localhost:5000/api/theaters');\n        const data = await res.json();\n\n        // Ensure you're getting an array of theaters\n        const validData = Array.isArray(data) ? data : data.theaters || [];\n        setTheaters(validData);\n      } catch (err) {\n        console.error('Error fetching theaters:', err);\n        setError('Failed to load theaters');\n      }\n    };\n    fetchTheaters();\n  }, []);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-6 text-center text-red-500\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 max-w-4xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl font-bold mb-6 text-center text-indigo-600\",\n      children: \"Browse Theaters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 gap-6\",\n      children: theaters.map((theater, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-100 p-4 rounded shadow text-black\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-semibold\",\n          children: theater.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-700\",\n          children: theater.location\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-500\",\n          children: [\"Showing: \", Array.isArray(theater.movieTitles) ? theater.movieTitles.join(', ') : 'N/A']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(TheatersPage, \"14fQcX2PdLdlHSo5+iuMOuNT58c=\");\n_c = TheatersPage;\nexport default TheatersPage;\nvar _c;\n$RefreshReg$(_c, \"TheatersPage\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","TheatersPage","_s","theaters","setTheaters","error","setError","fetchTheaters","res","fetch","data","json","validData","Array","isArray","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","theater","idx","name","location","movieTitles","join","_c","$RefreshReg$"],"sources":["C:/Users/Harshal/Desktop/showsnap/frontend/src/pages/TheatersPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nfunction TheatersPage() {\r\n  const [theaters, setTheaters] = useState([]);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchTheaters = async () => {\r\n      try {\r\n        const res = await fetch('http://localhost:5000/api/theaters');\r\n        const data = await res.json();\r\n\r\n        // Ensure you're getting an array of theaters\r\n        const validData = Array.isArray(data) ? data : data.theaters || [];\r\n        setTheaters(validData);\r\n      } catch (err) {\r\n        console.error('Error fetching theaters:', err);\r\n        setError('Failed to load theaters');\r\n      }\r\n    };\r\n\r\n    fetchTheaters();\r\n  }, []);\r\n\r\n  if (error) {\r\n    return <div className=\"p-6 text-center text-red-500\">{error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-6 max-w-4xl mx-auto\">\r\n      <h2 className=\"text-3xl font-bold mb-6 text-center text-indigo-600\">Browse Theaters</h2>\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n        {theaters.map((theater, idx) => (\r\n          <div key={idx} className=\"bg-gray-100 p-4 rounded shadow text-black\">\r\n            <h3 className=\"text-xl font-semibold\">{theater.name}</h3>\r\n            <p className=\"text-gray-700\">{theater.location}</p>\r\n            <p className=\"text-sm text-gray-500\">\r\n              Showing: {Array.isArray(theater.movieTitles) ? theater.movieTitles.join(', ') : 'N/A'}\r\n            </p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TheatersPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd,MAAMU,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,oCAAoC,CAAC;QAC7D,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;;QAE7B;QACA,MAAMC,SAAS,GAAGC,KAAK,CAACC,OAAO,CAACJ,IAAI,CAAC,GAAGA,IAAI,GAAGA,IAAI,CAACP,QAAQ,IAAI,EAAE;QAClEC,WAAW,CAACQ,SAAS,CAAC;MACxB,CAAC,CAAC,OAAOG,GAAG,EAAE;QACZC,OAAO,CAACX,KAAK,CAAC,0BAA0B,EAAEU,GAAG,CAAC;QAC9CT,QAAQ,CAAC,yBAAyB,CAAC;MACrC;IACF,CAAC;IAEDC,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIF,KAAK,EAAE;IACT,oBAAOL,OAAA;MAAKiB,SAAS,EAAC,8BAA8B;MAAAC,QAAA,EAAEb;IAAK;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EACpE;EAEA,oBACEtB,OAAA;IAAKiB,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBACpClB,OAAA;MAAIiB,SAAS,EAAC,qDAAqD;MAAAC,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxFtB,OAAA;MAAKiB,SAAS,EAAC,uCAAuC;MAAAC,QAAA,EACnDf,QAAQ,CAACoB,GAAG,CAAC,CAACC,OAAO,EAAEC,GAAG,kBACzBzB,OAAA;QAAeiB,SAAS,EAAC,2CAA2C;QAAAC,QAAA,gBAClElB,OAAA;UAAIiB,SAAS,EAAC,uBAAuB;UAAAC,QAAA,EAAEM,OAAO,CAACE;QAAI;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACzDtB,OAAA;UAAGiB,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAEM,OAAO,CAACG;QAAQ;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACnDtB,OAAA;UAAGiB,SAAS,EAAC,uBAAuB;UAAAC,QAAA,GAAC,WAC1B,EAACL,KAAK,CAACC,OAAO,CAACU,OAAO,CAACI,WAAW,CAAC,GAAGJ,OAAO,CAACI,WAAW,CAACC,IAAI,CAAC,IAAI,CAAC,GAAG,KAAK;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpF,CAAC;MAAA,GALIG,GAAG;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMR,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACpB,EAAA,CA1CQD,YAAY;AAAA6B,EAAA,GAAZ7B,YAAY;AA4CrB,eAAeA,YAAY;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}