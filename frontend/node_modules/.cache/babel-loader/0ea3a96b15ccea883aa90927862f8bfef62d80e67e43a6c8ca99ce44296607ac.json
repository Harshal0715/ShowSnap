{"ast":null,"code":"import { bookSeats } from '../services/api';\nconst handleRazorpayPayment = async payload => {\n  const res = await fetch('http://localhost:5000/api/payments/create-order', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      amount: payload.amount\n    })\n  });\n  const {\n    orderId\n  } = await res.json();\n  const options = {\n    key: 'rzp_test_RIn3HX6YPDL3Nf',\n    amount: payload.amount,\n    currency: 'INR',\n    name: 'ShowSnap',\n    description: 'Movie Ticket Booking',\n    order_id: orderId,\n    handler: async function (response) {\n      var _bookingRes$data;\n      // ✅ Only after payment is successful\n      alert('✅ Payment successful!');\n      const token = localStorage.getItem('token');\n      const user = JSON.parse(localStorage.getItem('user'));\n\n      // Save booking to DB\n      const bookingRes = await bookSeats(payload, token);\n      const bookingId = bookingRes === null || bookingRes === void 0 ? void 0 : (_bookingRes$data = bookingRes.data) === null || _bookingRes$data === void 0 ? void 0 : _bookingRes$data._id;\n\n      // Send confirmation email\n      await fetch('http://localhost:5000/api/email/booking-confirmation', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          booking: payload,\n          userEmail: user.email\n        })\n      });\n\n      // Redirect to summary page\n      if (bookingId) {\n        window.location.href = `/my-bookings/${bookingId}`;\n      }\n    },\n    prefill: {\n      name: 'Harshal',\n      email: 'harshal@example.com',\n      contact: '9999999999'\n    },\n    theme: {\n      color: '#F37254'\n    }\n  };\n  const rzp = new window.Razorpay(options);\n  rzp.open();\n};\nexport default handleRazorpayPayment;","map":{"version":3,"names":["bookSeats","handleRazorpayPayment","payload","res","fetch","method","headers","body","JSON","stringify","amount","orderId","json","options","key","currency","name","description","order_id","handler","response","_bookingRes$data","alert","token","localStorage","getItem","user","parse","bookingRes","bookingId","data","_id","booking","userEmail","email","window","location","href","prefill","contact","theme","color","rzp","Razorpay","open"],"sources":["C:/Users/Harshal/Desktop/showsnap/frontend/src/components/RazorpayCheckout.js"],"sourcesContent":["import { bookSeats } from '../services/api';\r\n\r\nconst handleRazorpayPayment = async (payload) => {\r\n  const res = await fetch('http://localhost:5000/api/payments/create-order', {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify({ amount: payload.amount })\r\n  });\r\n\r\n  const { orderId } = await res.json();\r\n\r\n  const options = {\r\n    key: 'rzp_test_RIn3HX6YPDL3Nf',\r\n    amount: payload.amount,\r\n    currency: 'INR',\r\n    name: 'ShowSnap',\r\n    description: 'Movie Ticket Booking',\r\n    order_id: orderId,\r\n    handler: async function (response) {\r\n      // ✅ Only after payment is successful\r\n      alert('✅ Payment successful!');\r\n\r\n      const token = localStorage.getItem('token');\r\n      const user = JSON.parse(localStorage.getItem('user'));\r\n\r\n      // Save booking to DB\r\n      const bookingRes = await bookSeats(payload, token);\r\n      const bookingId = bookingRes?.data?._id;\r\n\r\n      // Send confirmation email\r\n      await fetch('http://localhost:5000/api/email/booking-confirmation', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          booking: payload,\r\n          userEmail: user.email\r\n        })\r\n      });\r\n\r\n      // Redirect to summary page\r\n      if (bookingId) {\r\n        window.location.href = `/my-bookings/${bookingId}`;\r\n      }\r\n    },\r\n    prefill: {\r\n      name: 'Harshal',\r\n      email: 'harshal@example.com',\r\n      contact: '9999999999'\r\n    },\r\n    theme: {\r\n      color: '#F37254'\r\n    }\r\n  };\r\n\r\n  const rzp = new window.Razorpay(options);\r\n  rzp.open();\r\n};\r\nexport default handleRazorpayPayment;\r\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAE3C,MAAMC,qBAAqB,GAAG,MAAOC,OAAO,IAAK;EAC/C,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,iDAAiD,EAAE;IACzEC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEC,MAAM,EAAER,OAAO,CAACQ;IAAO,CAAC;EACjD,CAAC,CAAC;EAEF,MAAM;IAAEC;EAAQ,CAAC,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC;EAEpC,MAAMC,OAAO,GAAG;IACdC,GAAG,EAAE,yBAAyB;IAC9BJ,MAAM,EAAER,OAAO,CAACQ,MAAM;IACtBK,QAAQ,EAAE,KAAK;IACfC,IAAI,EAAE,UAAU;IAChBC,WAAW,EAAE,sBAAsB;IACnCC,QAAQ,EAAEP,OAAO;IACjBQ,OAAO,EAAE,eAAAA,CAAgBC,QAAQ,EAAE;MAAA,IAAAC,gBAAA;MACjC;MACAC,KAAK,CAAC,uBAAuB,CAAC;MAE9B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAMC,IAAI,GAAGlB,IAAI,CAACmB,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;;MAErD;MACA,MAAMG,UAAU,GAAG,MAAM5B,SAAS,CAACE,OAAO,EAAEqB,KAAK,CAAC;MAClD,MAAMM,SAAS,GAAGD,UAAU,aAAVA,UAAU,wBAAAP,gBAAA,GAAVO,UAAU,CAAEE,IAAI,cAAAT,gBAAA,uBAAhBA,gBAAA,CAAkBU,GAAG;;MAEvC;MACA,MAAM3B,KAAK,CAAC,sDAAsD,EAAE;QAClEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBuB,OAAO,EAAE9B,OAAO;UAChB+B,SAAS,EAAEP,IAAI,CAACQ;QAClB,CAAC;MACH,CAAC,CAAC;;MAEF;MACA,IAAIL,SAAS,EAAE;QACbM,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,gBAAgBR,SAAS,EAAE;MACpD;IACF,CAAC;IACDS,OAAO,EAAE;MACPtB,IAAI,EAAE,SAAS;MACfkB,KAAK,EAAE,qBAAqB;MAC5BK,OAAO,EAAE;IACX,CAAC;IACDC,KAAK,EAAE;MACLC,KAAK,EAAE;IACT;EACF,CAAC;EAED,MAAMC,GAAG,GAAG,IAAIP,MAAM,CAACQ,QAAQ,CAAC9B,OAAO,CAAC;EACxC6B,GAAG,CAACE,IAAI,CAAC,CAAC;AACZ,CAAC;AACD,eAAe3C,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}