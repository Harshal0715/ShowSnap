{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Harshal\\\\Desktop\\\\showsnap\\\\frontend\\\\src\\\\pages\\\\ResetPassword.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { resetPassword } from '../services/api';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResetPassword() {\n  _s();\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const {\n    token\n  } = useParams(); // Get the token from the URL\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    if (password.length < 6) {\n      toast.error('Password must be at least 6 characters');\n      setLoading(false);\n      return;\n    }\n    if (password !== confirmPassword) {\n      toast.error('Passwords do not match');\n      setLoading(false);\n      return;\n    }\n    try {\n      await resetPassword(token, password);\n      toast.success('Password reset successfully!');\n      navigate('/login');\n    } catch (err) {\n      var _err$response, _err$response$data;\n      toast.error(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'Failed to reset password. Link may be invalid or expired.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex items-center justify-center bg-gradient-to-br from-black via-gray-900 to-gray-800 px-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-md w-full bg-white p-8 rounded-xl shadow-2xl\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold text-red-600 mb-6 text-center\",\n        children: \"Reset Your Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"space-y-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700 mb-1\",\n            children: \"New Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            className: \"w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-red-500\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700 mb-1\",\n            children: \"Confirm New Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\",\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value),\n            className: \"w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-red-500\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: loading,\n          className: `w-full py-2 rounded-lg text-white font-semibold transition duration-200 ${loading ? 'bg-gray-400 cursor-not-allowed' : 'bg-red-600 hover:bg-red-700'}`,\n          children: loading ? 'Resetting...' : 'Reset Password'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(ResetPassword, \"mZgvqlqfRgZ0IovklY7q6f6dXww=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useNavigate","useParams","resetPassword","toast","jsxDEV","_jsxDEV","ResetPassword","_s","password","setPassword","confirmPassword","setConfirmPassword","loading","setLoading","navigate","token","handleSubmit","e","preventDefault","length","error","success","err","_err$response","_err$response$data","response","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Harshal/Desktop/showsnap/frontend/src/pages/ResetPassword.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { resetPassword } from '../services/api';\r\nimport toast from 'react-hot-toast';\r\n\r\nfunction ResetPassword() {\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n  const { token } = useParams(); // Get the token from the URL\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n\r\n    if (password.length < 6) {\r\n      toast.error('Password must be at least 6 characters');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    if (password !== confirmPassword) {\r\n      toast.error('Passwords do not match');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await resetPassword(token, password);\r\n      toast.success('Password reset successfully!');\r\n      navigate('/login');\r\n    } catch (err) {\r\n      toast.error(\r\n        err.response?.data?.error || 'Failed to reset password. Link may be invalid or expired.'\r\n      );\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-black via-gray-900 to-gray-800 px-4\">\r\n      <div className=\"max-w-md w-full bg-white p-8 rounded-xl shadow-2xl\">\r\n        <h2 className=\"text-2xl font-bold text-red-600 mb-6 text-center\">Reset Your Password</h2>\r\n        <form onSubmit={handleSubmit} className=\"space-y-5\">\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">New Password</label>\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"••••••••\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              className=\"w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-red-500\"\r\n              required\r\n            />\r\n          </div>\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Confirm New Password</label>\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"••••••••\"\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n              className=\"w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-red-500\"\r\n              required\r\n            />\r\n          </div>\r\n          <button\r\n            type=\"submit\"\r\n            disabled={loading}\r\n            className={`w-full py-2 rounded-lg text-white font-semibold transition duration-200 ${\r\n              loading ? 'bg-gray-400 cursor-not-allowed' : 'bg-red-600 hover:bg-red-700'\r\n            }`}\r\n          >\r\n            {loading ? 'Resetting...' : 'Reset Password'}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResetPassword;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}