{"ast":null,"code":"import axios from 'axios';\n\n// 🌐 Create Axios instance\nconst API = axios.create({\n  baseURL: process.env.REACT_APP_API_BASE_URL || 'http://localhost:5000/api',\n  timeout: 10000\n});\n\n// 🔑 Request interceptor: inject token if available\nAPI.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// ⚠️ Response interceptor: global error logging\nAPI.interceptors.response.use(response => response, error => {\n  var _error$response;\n  console.error('API Error:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n  return Promise.reject(error);\n});\n\n// ---\n// 🎬 Movie APIs\n// ---\nexport const fetchAdminMovies = () => API.get('/admin/movies');\nexport const fetchPublicMovies = () => API.get('/movies');\nexport const fetchMovieById = id => API.get(`/admin/movies/${id}`);\nexport const createMovie = movieData => API.post('/admin/movies', movieData);\nexport const updateMovie = (id, data) => API.put(`/admin/movies/${id}`, data);\nexport const deleteMovie = movieId => API.delete(`/admin/movies/${movieId}`);\n\n// ---\n// 👤 User Auth APIs\n// ---\nexport const loginUser = data => API.post('/users/login', data);\nexport const signupUser = userData => API.post('/users/register', userData);\n\n// ---\n// 🎟️ Booking APIs\n// ---\nexport const getAllUserBookings = () => API.get('/bookings');\nexport const cancelBooking = bookingId => API.patch(`/bookings/${bookingId}/cancel`);\n\n// ---\n// 🛠️ Admin APIs\n// ---\nexport const getAllBookings = () => API.get('/admin/bookings');\nexport const getAdminStats = () => API.get('/admin/dashboard');\nexport const getAllUsers = () => API.get('/admin/users');\nexport const pingAdmin = () => API.get('/admin/ping');\n\n// ---\n// 🏢 Theater APIs\n// ---\nexport const fetchTheaters = () => API.get('/theaters');\n\n// ---\n// 👤 User Profile APIs\n// ---\n// Fetch logged-in user profile (no ID needed)\nexport const fetchUserProfile = () => API.get('/users/profile');\n\n// Update logged-in user profile, including optional photo\nexport const updateUserProfile = async (formData, token) => {\n  return await API.put('/users/profile', formData, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n};\nexport default API;","map":{"version":3,"names":["axios","API","create","baseURL","process","env","REACT_APP_API_BASE_URL","timeout","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","response","error","_error$response","console","data","message","Promise","reject","fetchAdminMovies","get","fetchPublicMovies","fetchMovieById","id","createMovie","movieData","post","updateMovie","put","deleteMovie","movieId","delete","loginUser","signupUser","userData","getAllUserBookings","cancelBooking","bookingId","patch","getAllBookings","getAdminStats","getAllUsers","pingAdmin","fetchTheaters","fetchUserProfile","updateUserProfile","formData"],"sources":["C:/Users/Harshal/Desktop/showsnap/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// 🌐 Create Axios instance\r\nconst API = axios.create({\r\n  baseURL: process.env.REACT_APP_API_BASE_URL || 'http://localhost:5000/api',\r\n  timeout: 10000,\r\n});\r\n\r\n// 🔑 Request interceptor: inject token if available\r\nAPI.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\n// ⚠️ Response interceptor: global error logging\r\nAPI.interceptors.response.use(\r\n  response => response,\r\n  error => {\r\n    console.error('API Error:', error.response?.data || error.message);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// ---\r\n// 🎬 Movie APIs\r\n// ---\r\nexport const fetchAdminMovies = () => API.get('/admin/movies');\r\nexport const fetchPublicMovies = () => API.get('/movies');\r\nexport const fetchMovieById = (id) => API.get(`/admin/movies/${id}`);\r\nexport const createMovie = (movieData) => API.post('/admin/movies', movieData);\r\nexport const updateMovie = (id, data) => API.put(`/admin/movies/${id}`, data);\r\nexport const deleteMovie = (movieId) => API.delete(`/admin/movies/${movieId}`);\r\n\r\n// ---\r\n// 👤 User Auth APIs\r\n// ---\r\nexport const loginUser = (data) => API.post('/users/login', data);\r\nexport const signupUser = (userData) => API.post('/users/register', userData);\r\n\r\n// ---\r\n// 🎟️ Booking APIs\r\n// ---\r\nexport const getAllUserBookings = () => API.get('/bookings');\r\nexport const cancelBooking = (bookingId) => API.patch(`/bookings/${bookingId}/cancel`);\r\n\r\n// ---\r\n// 🛠️ Admin APIs\r\n// ---\r\nexport const getAllBookings = () => API.get('/admin/bookings');\r\nexport const getAdminStats = () => API.get('/admin/dashboard');\r\nexport const getAllUsers = () => API.get('/admin/users');\r\nexport const pingAdmin = () => API.get('/admin/ping');\r\n\r\n// ---\r\n// 🏢 Theater APIs\r\n// ---\r\nexport const fetchTheaters = () => API.get('/theaters');\r\n\r\n// ---\r\n// 👤 User Profile APIs\r\n// ---\r\n// Fetch logged-in user profile (no ID needed)\r\nexport const fetchUserProfile = () => API.get('/users/profile');\r\n\r\n// Update logged-in user profile, including optional photo\r\nexport const updateUserProfile = async (formData, token) => {\r\n  return await API.put('/users/profile', formData, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n      'Content-Type': 'multipart/form-data',\r\n    },\r\n  });\r\n};\r\n\r\nexport default API;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}