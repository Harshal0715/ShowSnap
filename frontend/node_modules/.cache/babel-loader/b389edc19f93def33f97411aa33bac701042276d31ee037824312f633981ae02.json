{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Harshal\\\\Desktop\\\\showsnap\\\\frontend\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useMemo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [role, setRole] = useState('user');\n  const [token, setToken] = useState(null);\n\n  // 🔐 Check if JWT token is expired\n  const isTokenExpired = jwtToken => {\n    try {\n      const payload = JSON.parse(atob(jwtToken.split('.')[1]));\n      return payload.exp * 1000 < Date.now();\n    } catch (error) {\n      console.error('❌ Error decoding token:', error);\n      return true;\n    }\n  };\n\n  // 🧹 Clear auth state\n  const clearAuthState = () => {\n    setUser(null);\n    setIsAuthenticated(false);\n    setRole('user');\n    setToken(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    localStorage.removeItem('role');\n  };\n\n  // 🔑 Login handler\n  const login = (userData, jwtToken) => {\n    if (!userData || !jwtToken) return;\n    localStorage.setItem('token', jwtToken);\n    localStorage.setItem('user', JSON.stringify(userData));\n    localStorage.setItem('role', (userData.role || 'user').toLowerCase());\n    setUser(userData);\n    setIsAuthenticated(true);\n    setRole((userData.role || 'user').toLowerCase());\n    setToken(jwtToken);\n  };\n\n  // 🔄 Sync localStorage on mount\n  useEffect(() => {\n    const storedToken = localStorage.getItem('token');\n    const storedUser = localStorage.getItem('user');\n    const storedRole = localStorage.getItem('role');\n    if (storedToken && storedUser) {\n      if (isTokenExpired(storedToken)) {\n        console.warn('⚠️ Token expired. Clearing auth state.');\n        clearAuthState();\n        return;\n      }\n      try {\n        const parsedUser = JSON.parse(storedUser);\n        setUser(parsedUser);\n        setIsAuthenticated(true);\n        setRole(storedRole || parsedUser.role || 'user');\n        setToken(storedToken);\n      } catch (error) {\n        console.error('❌ Error parsing stored user:', {\n          storedUser,\n          storedToken,\n          error\n        });\n        clearAuthState();\n      }\n    }\n  }, []);\n\n  // ⏱️ Auto-logout on token expiry\n  useEffect(() => {\n    if (!token) return;\n    const interval = setInterval(() => {\n      if (isTokenExpired(token)) {\n        console.warn('⚠️ Token expired. Logging out.');\n        clearAuthState();\n      }\n    }, 60 * 1000); // check every minute\n\n    return () => clearInterval(interval);\n  }, [token]);\n\n  // 🔧 Memoized context value for performance\n  const contextValue = useMemo(() => ({\n    user,\n    setUser,\n    isAuthenticated,\n    setIsAuthenticated,\n    role,\n    setRole,\n    token,\n    login,\n    clearAuthState\n  }), [user, isAuthenticated, role, token]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"Fg+YLjYT1wvJjoGQ2pw87G2mjp4=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useMemo","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","isAuthenticated","setIsAuthenticated","role","setRole","token","setToken","isTokenExpired","jwtToken","payload","JSON","parse","atob","split","exp","Date","now","error","console","clearAuthState","localStorage","removeItem","login","userData","setItem","stringify","toLowerCase","storedToken","getItem","storedUser","storedRole","warn","parsedUser","interval","setInterval","clearInterval","contextValue","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Harshal/Desktop/showsnap/frontend/src/context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect, useMemo } from 'react';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [role, setRole] = useState('user');\r\n  const [token, setToken] = useState(null);\r\n\r\n  // 🔐 Check if JWT token is expired\r\n  const isTokenExpired = (jwtToken) => {\r\n    try {\r\n      const payload = JSON.parse(atob(jwtToken.split('.')[1]));\r\n      return payload.exp * 1000 < Date.now();\r\n    } catch (error) {\r\n      console.error('❌ Error decoding token:', error);\r\n      return true;\r\n    }\r\n  };\r\n\r\n  // 🧹 Clear auth state\r\n  const clearAuthState = () => {\r\n    setUser(null);\r\n    setIsAuthenticated(false);\r\n    setRole('user');\r\n    setToken(null);\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    localStorage.removeItem('role');\r\n  };\r\n\r\n  // 🔑 Login handler\r\n  const login = (userData, jwtToken) => {\r\n    if (!userData || !jwtToken) return;\r\n    localStorage.setItem('token', jwtToken);\r\n    localStorage.setItem('user', JSON.stringify(userData));\r\n    localStorage.setItem('role', (userData.role || 'user').toLowerCase());\r\n    setUser(userData);\r\n    setIsAuthenticated(true);\r\n    setRole((userData.role || 'user').toLowerCase());\r\n    setToken(jwtToken);\r\n  };\r\n\r\n  // 🔄 Sync localStorage on mount\r\n  useEffect(() => {\r\n    const storedToken = localStorage.getItem('token');\r\n    const storedUser = localStorage.getItem('user');\r\n    const storedRole = localStorage.getItem('role');\r\n\r\n    if (storedToken && storedUser) {\r\n      if (isTokenExpired(storedToken)) {\r\n        console.warn('⚠️ Token expired. Clearing auth state.');\r\n        clearAuthState();\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const parsedUser = JSON.parse(storedUser);\r\n        setUser(parsedUser);\r\n        setIsAuthenticated(true);\r\n        setRole(storedRole || parsedUser.role || 'user');\r\n        setToken(storedToken);\r\n      } catch (error) {\r\n        console.error('❌ Error parsing stored user:', { storedUser, storedToken, error });\r\n        clearAuthState();\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  // ⏱️ Auto-logout on token expiry\r\n  useEffect(() => {\r\n    if (!token) return;\r\n    const interval = setInterval(() => {\r\n      if (isTokenExpired(token)) {\r\n        console.warn('⚠️ Token expired. Logging out.');\r\n        clearAuthState();\r\n      }\r\n    }, 60 * 1000); // check every minute\r\n\r\n    return () => clearInterval(interval);\r\n  }, [token]);\r\n\r\n  // 🔧 Memoized context value for performance\r\n  const contextValue = useMemo(() => ({\r\n    user,\r\n    setUser,\r\n    isAuthenticated,\r\n    setIsAuthenticated,\r\n    role,\r\n    setRole,\r\n    token,\r\n    login,\r\n    clearAuthState\r\n  }), [user, isAuthenticated, role, token]);\r\n\r\n  return (\r\n    <AuthContext.Provider value={contextValue}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}